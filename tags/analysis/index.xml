<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Analysis on Haney Codes .NET - Sharing my experiences as a developer and engineering manager.</title>
    <link>http://www.haneycodes.net/tags/analysis/</link>
    <description>Recent content in Analysis on Haney Codes .NET - Sharing my experiences as a developer and engineering manager.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>David Haney</copyright>
    <lastBuildDate>Mon, 09 Mar 2015 18:32:37 +0000</lastBuildDate>
    
	<atom:link href="http://www.haneycodes.net/tags/analysis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>On Secretly Terrible Engineers - A Rebuttal</title>
      <link>http://www.haneycodes.net/on-secretly-terrible-engineers-a-rebuttal/</link>
      <pubDate>Mon, 09 Mar 2015 18:32:37 +0000</pubDate>
      
      <guid>http://www.haneycodes.net/on-secretly-terrible-engineers-a-rebuttal/</guid>
      <description>Today an article was brought to my attention. One that, at the time of writing this post, had hit the front page of various sites (including Hacker News) and had been shared over 2,600 times. The article is On Secretly Terrible Engineers, which is a criticism of the tech industry and the mentality which it holds towards hiring both new and experienced developers/engineers.
Spoiler: I strongly disagree with most of this article.</description>
    </item>
    
    <item>
      <title>iPhone 6: Style Over Substance</title>
      <link>http://www.haneycodes.net/iphone-6-style-over-substance/</link>
      <pubDate>Tue, 09 Sep 2014 19:22:53 +0000</pubDate>
      
      <guid>http://www.haneycodes.net/iphone-6-style-over-substance/</guid>
      <description>Intro Like many of you, today I watched the Apple media event in which they announced both the iPhone 6 and Apple Watch. I&amp;#8217;m not going to talk about the watch, but instead about the phone.
For years Apple has been a true cachet brand. They are a luxury item that is sought after for status and image. I don&amp;#8217;t blame anyone for owning an iPhone: they&amp;#8217;re reasonably sexy and you get to show off the Apple branding.</description>
    </item>
    
    <item>
      <title>To Node.js Or Not To Node.js</title>
      <link>http://www.haneycodes.net/to-node-js-or-not-to-node-js/</link>
      <pubDate>Mon, 24 Mar 2014 16:41:25 +0000</pubDate>
      
      <guid>http://www.haneycodes.net/to-node-js-or-not-to-node-js/</guid>
      <description>Intro Node.js &amp;#8211; it has rapidly become the &amp;#8220;new hotness&amp;#8221; in the tech start-up realm. With each passing day, the fan base of Node lovers grows larger, spreading their rhetoric like a religion. How do you spot a Node.js user? Don&amp;#8217;t worry, they&amp;#8217;ll let you know.
One day you&amp;#8217;re at a regular user group meeting, sipping soda and talking with some colleagues, when the subject turns to Node. &amp;#8220;Have you guys tried Node.</description>
    </item>
    
    <item>
      <title>Static vs Instance string.Equals Benchmark</title>
      <link>http://www.haneycodes.net/static-vs-instance-string-equals-benchmark/</link>
      <pubDate>Wed, 24 Oct 2012 16:57:14 +0000</pubDate>
      
      <guid>http://www.haneycodes.net/static-vs-instance-string-equals-benchmark/</guid>
      <description>A friend of mine commented on my last post asking about how much faster the static string.Equals method is than the instance string.Equals method. To satiate both of our curiosities, I have created this benchmarking application:
static void Main(string[] args) { var stopwatch = new Stopwatch(); string a = &amp;quot;hello&amp;quot;; string b = &amp;quot;hi&amp;quot;; stopwatch.Start(); for (int i = 0; i &amp;lt; 10000000; i++) { a.Equals(b); } stopwatch.Stop(); Console.WriteLine(&amp;quot;Instance string.Equals over 10,000,000 iterations: &amp;quot; + stopwatch.</description>
    </item>
    
    <item>
      <title>Static vs Instance string.Equals</title>
      <link>http://www.haneycodes.net/stats-vs-reference-string-equals/</link>
      <pubDate>Mon, 22 Oct 2012 14:57:14 +0000</pubDate>
      
      <guid>http://www.haneycodes.net/stats-vs-reference-string-equals/</guid>
      <description>As you may or may not know, static methods are usually faster than instance methods. This alone should be a good enough reason to use the static string.Equals method in .NET, but if that doesn&amp;#8217;t do it for you, allow me to present a simple example.
string a = &amp;quot;hello&amp;quot;; string b = &amp;quot;hi&amp;quot;; bool result = a.Equals(b);  What is the expected result of these lines? A boolean value of false, of course.</description>
    </item>
    
    <item>
      <title>The Joel Test Really is Meaningful</title>
      <link>http://www.haneycodes.net/the-joel-test-really-is-meaningful/</link>
      <pubDate>Sun, 14 Oct 2012 22:10:54 +0000</pubDate>
      
      <guid>http://www.haneycodes.net/the-joel-test-really-is-meaningful/</guid>
      <description>Well, it&amp;#8217;s been nearly 2 months since my last post&amp;#8230; I&amp;#8217;m learning that if you want a blog to be successful, you have to carve time out of your busy life and make it happen. So, with renewed focus, I re-enter the fray.
The Joel Test is a curious and honest thing. It has been around since the year 2000 and was invented by a guy named Joel Spolsky, as the name might imply.</description>
    </item>
    
  </channel>
</rss>